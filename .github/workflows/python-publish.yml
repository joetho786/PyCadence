# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Cadencepy

on:
  push:
    branches: [ main, docs ]
  release:
    types: [published]

permissions:
  contents: write
  pages: write

jobs:
  deploy-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install sphinx

      - name: Build docs
        run: |
          cd docs
          make clean
          make html

          touch build/html/.nojekyll
          
        
      - name: Deploy docs to github pages
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          BRANCH: gh-pages
          FOLDER: docs/build/html/
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}



  deploy-to-pypi:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Install pypa/build
      run: >-
        python3 -m
        pip install
        build
        --user
    
    - name: Autobump version by changing version in setup.py with reference to GITHUB_REF
      run: |
        echo "GITHUB_REF: $GITHUB_REF#refs/tags/"
        sed -i 
        cat setup.py

    - name: Build a binary wheel and a source tarball
      run: >-
        python3 -m
        build
        --sdist
        --wheel
        --outdir dist/
      
    - name: Install Twine
      run: >-
        python3 -m
        pip install
        twine
        --user
    
    # - name: Publish to PyPI
    #   run: >-
    #     python3 -m
    #     twine
    #     upload
    #     dist/*
    #   env:
    #     TWINE_USERNAME: __token__
    #     TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}

      
